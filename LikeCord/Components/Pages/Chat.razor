@page "/chat"
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.Extensions.Logging;
@inject NavigationManager Navigation

<h3>Chat</h3>
<input @bind="message" placeholder="Enter message" />
<button @onclick="SendMessage">Send</button>

@code {
    private HubConnection hubConnection = default!;
    private string message = string.Empty;
    private string user = "test1user";

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl("http://localhost:5063/chatHub")
            .ConfigureLogging(logging =>
            {
                logging.AddDebug();
                logging.SetMinimumLevel(LogLevel.Debug);
            })
    .Build();


        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            // Обработайте полученное сообщение
            Console.WriteLine($"Received message from {user}: {message}");
        });

        hubConnection.Closed += async (error) =>
        {
            Console.WriteLine($"Connection closed: {error?.Message}");
            await Task.Delay(1000);
            await hubConnection.StartAsync();
        };

        await hubConnection.StartAsync();
    }

    private async Task SendMessage()
    {
        if (hubConnection.State == HubConnectionState.Connected)
        {
            try
            {
                await hubConnection.InvokeAsync("SendMessage", user, message);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error sending message: {ex.Message}");
            }
        }
    }
}
